apiVersion: v1
kind: Namespace
metadata:
  name: flask-app
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-config
  namespace: flask-app
data:
  FLASK_ENV: "production"
  FLASK_DEBUG: "false"
  MYSQL_DATABASE_USER: "admin"
  MYSQL_DATABASE_DB: "db_clientes"
  MYSQL_DATABASE_PORT: "3306"
---
apiVersion: v1
kind: Secret
metadata:
  name: flask-secret
  namespace: flask-app
type: Opaque
data:
  # Base64 encoded values - você pode gerar com: echo -n "your-secret" | base64
  SECRET_KEY: "ZGVmYXVsdC1zZWNyZXQta2V5LWZvci1kZXY="
  MYSQL_DATABASE_PASSWORD: "Y2lkYWRlMDE="  # cidade01 em base64
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: flask-app
  labels:
    app: flask-app
    environment: dev
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
        environment: dev
    spec:
      containers:
      - name: flask-app
        image: artur123231/flask-app:latest
        ports:
        - containerPort: 80
        env:
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              name: flask-config
              key: FLASK_ENV
        - name: FLASK_DEBUG
          valueFrom:
            configMapKeyRef:
              name: flask-config
              key: FLASK_DEBUG
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: flask-secret
              key: SECRET_KEY
        - name: MYSQL_DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: flask-config
              key: MYSQL_DATABASE_USER
        - name: MYSQL_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: flask-secret
              key: MYSQL_DATABASE_PASSWORD
        - name: MYSQL_DATABASE_DB
          valueFrom:
            configMapKeyRef:
              name: flask-config
              key: MYSQL_DATABASE_DB
        - name: MYSQL_DATABASE_HOST
          value: "rds-mysql-app.cn5tkswztpz4.us-east-2.rds.amazonaws.com"
        - name: MYSQL_DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: flask-config
              key: MYSQL_DATABASE_PORT
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: flask-app-service
  namespace: flask-app
  labels:
    app: flask-app
    environment: dev
spec:
  type: LoadBalancer  # Isso criará um ELB automaticamente
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: flask-app
  externalTrafficPolicy: Local 